name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: stablecoin_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create test environment file
      run: |
        cat > .env.test << EOF
        DATABASE_URL="postgresql://postgres:postgres@localhost:5432/stablecoin_test"
        REDIS_URL="redis://localhost:6379"
        NEXTAUTH_SECRET="test-secret-key-for-ci"
        NEXTAUTH_URL="http://localhost:3000"
        NODE_ENV="test"
        EOF
    
    - name: Run database migrations
      run: |
        npx prisma generate
        npx prisma db push
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/stablecoin_test
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npx tsc --noEmit
    
    - name: Run unit tests
      run: npm run test:unit
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/stablecoin_test
        REDIS_URL: redis://localhost:6379
    
    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/stablecoin_test
        REDIS_URL: redis://localhost:6379
        NEXTAUTH_SECRET: test-secret-key-for-ci
        NEXTAUTH_URL: http://localhost:3000
    
    - name: Run E2E tests
      run: npm run test:e2e
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/stablecoin_test
        REDIS_URL: redis://localhost:6379

  deploy:
    # needs: test  # Temporarily disabled due to billing issues
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && false  # Disabled
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      uses: vercel/action@v1
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        vercel-args: '--prod'